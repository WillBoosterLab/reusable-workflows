name: Add close comment

on:
  workflow_call:
    inputs:
      target_organization:
        required: false
        type: string

jobs:
  close-comment:
    if: ${{ !inputs.target_organization || github.repository_owner == inputs.target_organization }}
    runs-on: ${{ (!github.event.repository.private && 'ubuntu-latest') || fromJSON('["self-hosted", "medium"]') }}
    env:
      FORCE_COLOR: 3
    steps:
      - run: |
          mkdir -p temp
          echo "import { execSync } from 'node:child_process';" > temp/addCloseComment.mjs
          echo "const headRef = '${{ github.head_ref }}';" >> temp/addCloseComment.mjs
          echo "const prNumber = '${{ github.event.pull_request.number }}';" >> temp/addCloseComment.mjs
          echo "const repository = '${{ github.repository }}';" >> temp/addCloseComment.mjs
          cat - >> temp/addCloseComment.mjs << 'END_OF_HEARDOC'
          const url = `https://github.com/${repository}/pull/${prNumber}`;
          const [issueNumber] = headRef.split(/[-_]/);
          const issueNumberRegex = /^[0-9]+$/;
          if (issueNumberRegex.test(issueNumber)) {
              const stdout = execSync(`gh pr view ${url} --json body`, { encoding: 'utf8' });
              const commentBody = JSON.parse(stdout)['body'];
              const closeCommentRegex = new RegExp(`Close\\s+#${issueNumber}`, 'i');
              if (!closeCommentRegex.test(commentBody)) {
                  const newBody = `Close #${issueNumber}\r\n${commentBody}`;
                  execSync(`gh pr edit ${url} --body "${newBody}"`);
              }
          }
          END_OF_HEARDOC
          cat temp/addCloseComment.mjs
      - run: |
          node temp/addCloseComment.mjs
          rm -Rf temp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
