name: Willboosterify
on:
  workflow_call:
    inputs:
      dot_env_path:
        default: .env
        required: false
        type: string
      environment:
        required: false
        type: string
      github_hosted_runner:
        required: false
        type: boolean
      target_organization:
        required: false
        type: string
    secrets:
      DOT_ENV:
        required: false
jobs:
  wbfy:
    if: ${{ github.event_name != 'pull_request' && (!inputs.target_organization || github.repository_owner == inputs.target_organization) }}
    runs-on: self-hosted
    env:
      FORCE_COLOR: 3
      NODE_OPTIONS: --max-old-space-size=4096
      # arguments
      HAS_DOT_ENV: ${{ !!secrets.DOT_ENV }}
      WB_ENV: ${{ inputs.environment }}
    steps:
      # To trigger other workflows when running 'git push'
      - name: Checkout code with git
        run: |
          rm -rf .git
          rm -rf ./*
          rm -rf .[^.]*
          git init
          git remote add origin git@github.com:${{ github.repository }}.git
          git fetch --depth 1 origin ${{ github.event.repository.default_branch }}
          git checkout ${{ github.event.repository.default_branch }}
      - if: ${{ env.HAS_DOT_ENV == 'true' }}
        run: echo '${{ secrets.DOT_ENV }}' > ${{ inputs.dot_env_path }}

      - name: Check version files
        id: check-ver
        run: |
          if [[ -f .tool-versions || -f .node-version || -f .python-version ]]; then
            echo "exist-any-version=1" >> $GITHUB_OUTPUT
          fi
          if [[ -f .node-version ]] || grep -q nodejs .tool-versions; then
            echo "exist-nodejs-version=1" >> $GITHUB_OUTPUT
          fi
      - if: ${{ !steps.check-ver.outputs.exist-nodejs-version }}
        uses: actions/setup-node@v4
        with:
          check-latest: true
      - if: ${{ steps.check-ver.outputs.exist-any-version }}
        uses: willbooster/asdf-actions/install@main
      - name: Show environment information
        id: env-info
        # https://stackoverflow.com/a/677212
        run: |
          echo "WB_ENV: $WB_ENV"
          echo "node: $(node -v)"
          echo "npm: $(npm -v)"
          if [[ -f bunfig.toml ]] && grep -q bun .tool-versions; then
            echo "bun: $(bun -v)"
            echo "runner=bun" >> $GITHUB_OUTPUT
          else
            YARN=$(yarn -v); echo "yarn: $YARN"
            if [[ "$YARN" == "1."* ]]; then
              echo "yarn-dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
            fi
            echo "runner=yarn" >> $GITHUB_OUTPUT
          fi

          if PYTHON=$(python --version 2> /dev/null); then echo "python: $PYTHON"; fi
          if POETRY=$(poetry --version 2> /dev/null); then
            echo "poetry: $POETRY"
            poetry config virtualenvs.in-project true
          fi

      - run: |
          if [[ "${{ steps.env-info.outputs.runner }}" == "bun" ]]; then
            bun update
          else
            ${{ steps.env-info.outputs.runner }} install --no-immutable || true # To ignore postinstall errors
          fi
          if [[ "${{ steps.env-info.outputs.runner }}" == "bun" ]]; then
            bunx wbfy@latest --version && bunx wbfy@latest .
          else
            yarn dlx wbfy@latest --version && yarn dlx wbfy@latest .
          fi
      - run: |
          if [[ "$(cat package.json)" == *'"build":'* ]]; then
            ${{ steps.env-info.outputs.runner }} run build
          fi
      - run: |
          git checkout -B wbfy
          git add -A
          if git commit -m "chore: willboosterify this repo" --no-verify; then
            git push origin wbfy -f --no-verify
          fi
        env:
          HUSKY: 0
          LEFTHOOK: 0
      - if: ${{ always() }}
        name: Delete credential files
        run: rm -f ${{ inputs.dot_env_path }}
